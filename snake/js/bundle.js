!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(t,n){function o(){this.direction="N",this.segments=[]}o.prototype.move=function(){let t;switch(this.direction){case"N":t=[0,1];break;case"W":t=[-1,0];break;case"E":t=[1,0];break;case"S":t=[0,-1]}this.segments.map(e,idx,e=>{if(idx!==e.length)return e[idx+1]});let n=this.segments.pop();this.segments.shift([n[0]+t[0],+n[1]+t[1]])},o.prototype.turn=function(e){this.direction=e},t.exports=o,t.exports=function(){this.snake=new o}},function(e,t,n){const o=n(0);function r(e){this.$el=e,this.board=new o,this.binding(),this.render()}r.prototype.binding=function(){$(window).on("keydown",e=>{let t=null;switch(e.key){case"ArrowUp":t="N";break;case"ArrowDown":t="S";break;case"ArrowLeft":t="W";break;case"ArrowRight":t="E"}t&&this.board.snake.turn(t),console.log(this.board.snake)})},r.prototype.step=function(){this.snake.move()},r.prototype.render=function(){const e=$(".snake-game");for(let t=0;t<10;t++){let n=$('<ul class="row"></ul>');for(let e=0;e<10;e++){let o=$('<li class="cell"></li>');o.data("pos",[t,e]),n.append(o)}e.append(n)}},e.exports=r},function(e,t,n){n(0);const o=n(1);$(()=>{const e=$(".snake-game");view=new o(e)})}]);